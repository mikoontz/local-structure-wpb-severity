2018-09-07
Densified Point Cloud processing steps for local-structure-wpb-severity project using CloudCompare Version 2.9.1 Stereo

This file documents the steps I took to process each densified point cloud, which are products from the Pix4DMapper program and come in .las file formats.

The .las point clouds are large, and Pix4DMapper usually breaks up their spatial extent into separate non-overlapping tiles. There are typically 4 tiles 
for each 40 hectare site. For the first ~half of the 36 sites I processed in Pix4D, I didn't use the "merge .las tiles into a single tile" option. Each
merged .las file would be about 2GB, which I think I'll do for the second half of the processed images.

1) Merge the .las files for each site if they aren't merged already. 
a) Open the CloudCompare software program. 
b) Open all of the .las files for a given site.
c) Click "no" to *not* adjust the coordinate system of the .las point cloud upon import. (Note: CloudCompare would like to center the coordinate system such that the
X, Y, and Z axes are using smaller values. Since the coordinate reference system of the generated point cloud is using meters, there are some very large
Y values. Supposedly, there is a way to "uncenter" the point cloud when it comes time for export, but I wasn't able to figure out how to do this for the 
raster output of the digital terrain model (DTM). I opted instead for just *not* adjusting the coordinates). 
d) Select each of the point clouds in the left menu 
e) Go to Edit -> Merge
f) "Yes" to "Do you want to generate a scalar field with the original cloud index?" Because why not?
g) Select the original point cloud in the left menu; in the "Properties" (below the left menu), re-select "RGB" for the "Colors" display before using CSF

2) Classify points as "ground" or "non-ground" using the qCSF plugin
a) Select the merged point cloud in the left menu
b) Plugins -> CSF Filter
c) General Parameter Settings tab
i) Scenes box: "steep slope"
ii) Tick the "slope processing" box
e) Advanced Parameter Settings tab
i) Cloth resolution: 1.5 meters
ii) Max iterations: 500
iii) Classification threshold: 0.5 meters
iv) Tick the "export cloth mesh" box
d) Select the "off ground points" in the left menu generated by the CSF algorithm
e) Click the Save button to save the "just vegetation" point cloud as a .las file in the data_output folder for the correct site
f) Save in the "Original Resolution"
g) Select the "vertices" in the left menu generated by the CSF algorithm
h) Tools -> Projection -> Rasterize
i) Change the "step" to 2 meters to be larger than the cloth size from the CSF algorithm to make a smooth raster DTM with a 2m resolution
ii) Under "Projection", direction is "Z" and cell height is "average height", do not resample input cloud 
iii) Click "Update Grid" to generate the raster
iv) Under "Export", click raster. Tick the "export heights" box and no other boxes
v) Save as a .geoTIFF in the data_output folder for the correct site

CSF Filter Exceptions (Cloth resolution / Max iterations / Classification threshold)
All sites used (1.5 / 500 / 0.5) unless otherwise noted

eldo_3k_1: (1.5 / 500 / 0.5)
eldo_3k_2: (1.5 / 500 / 0.5)
eldo_3k_3: (1.5 / 500 / 0.5)
eldo_4k_1: (0.5 / 500 / 0.5) denser forest so used a smaller cloth size to better detect ground points
eldo_4k_2: (1.5 / 500 / 0.5)
eldo_4k_3: (0.5 / 500 / 0.5) denser forest with steep slopes
eldo_5k_1: (1.0 / 500 / 0.5) steep slopes
eldo_5k_2: (1.0 / 500 / 0.5) steep slopes
eldo_5k_3: (1.5 / 500 / 0.5)

sequ_4k_1: (1.0 / 500 / 0.5): dense vegetation + terrain
sequ_4k_2: (1.0 / 500 / 0.5): dense vegetation + terrain
sequ_4k_3: (1.0 / 500 / 0.5): steep slopes
sequ_5k_1: (0.8 / 500 / 0.5): vegetation + slopes
sequ_5k_2: (0.5 / 500 / 0.5): vegetation + slopes
sequ_5k_3: (1.2 / 500 / 0.5): vegetation + slopes
sequ_6k_1: (1.0 / 500 / 0.5): dense vegetation + terrain
sequ_6k_2: (1.0 / 500 / 0.5): dense vegetation + terrain
sequ_6k_3: (0.5 / 500 / 0.5): dense vegetation + terrain

sier_3k_1: (0.8 / 500 / 0.5): vegetation + slopes
sier_3k_2: (0.8 / 500 / 0.5): vegetation + slopes
sier_3k_3: (0.8 / 500 / 0.5): vegetation + slopes
sier_4k_1: (1.0 / 500 / 0.5): dense vegetation + terrain
sier_4k_2: (0.8 / 500 / 0.5): vegetation + slopes
sier_4k_3: (1.0 / 500 / 0.5): dense vegetation + terrain
sier_5k_1: (0.8 / 500 / 0.5): vegetation + slopes
sier_5k_2: (1.2 / 500 / 0.5): dense vegetation + terrain
sier_5k_3: (1.0 / 500 / 0.5): dense vegetation + terrain

stan_3k_1: (1.0 / 500 / 0.5): dense vegetation + terrain
stan_3k_2: (1.0 / 500 / 0.5): dense vegetation + terrain
stan_3k_3: (1.0 / 500 / 0.5): dense vegetation + terrain
stan_4k_1: (0.8 / 500 / 0.5): vegetation + slopes
stan_4k_2: (0.8 / 500 / 0.5): vegetation + slopes
stan_4k_3: (0.9 / 500 / 0.5): vegetation + slopes
stan_5k_1: (1.0 / 500 / 0.5): dense vegetation + terrain
stan_5k_2: (0.8 / 500 / 0.5): vegetation + slopes
stan_5k_3: (1.0 / 500 / 0.5): dense vegetation + terrain